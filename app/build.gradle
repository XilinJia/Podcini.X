plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "org.jetbrains.kotlin.android"
    id "org.jetbrains.kotlin.plugin.compose" version "$kotlin_version"
    id 'io.github.xilinjia.krdb'
}

composeCompiler {
    enableStrongSkippingMode = true
    reportsDestination = layout.buildDirectory.dir("compose_compiler")
//    stabilityConfigurationFile = rootProject.layout.projectDirectory.file("stability_config.conf")
}

// from common.gradle
android {
    defaultConfig {
        minSdk 26
        compileSdk 35
        targetSdk 34

        kotlinOptions {
            jvmTarget = '17'
        }
        vectorDrawables.useSupportLibrary false
        vectorDrawables.generatedDensities = []

        versionCode 160
        versionName "8.14.6"

        ndkVersion "27.0.12077973"

        applicationId "ac.mdiq.podcini.X"
        def commit = ""
        buildConfigField "String", "COMMIT_HASH", ('"' + (commit.isEmpty() ? "Unknown commit" : commit) + '"')

        if (project.hasProperty("podcastindexApiKey")) {
            buildConfigField "String", "PODCASTINDEX_API_KEY", '"' + podcastindexApiKey + '"'
            buildConfigField "String", "PODCASTINDEX_API_SECRET", '"' + podcastindexApiSecret + '"'
        } else {
            buildConfigField "String", "PODCASTINDEX_API_KEY", '"QT2RYHSUZ3UC9GDJ5MFY"'
            buildConfigField "String", "PODCASTINDEX_API_SECRET", '"Zw2NL74ht5aCtx5zFL$#MY$##qdVCX7x37jq95Sz"'
        }
    }

    packagingOptions {
        resources {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/CHANGES'
            exclude 'META-INF/README.md'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/MANIFEST.MF'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig true
        compose true
    }

    splits {
        abi {
             enable true
             reset()
             include "arm64-v8a"
             universalApk true
         }
     }

// from playFlavor.gradle
    flavorDimensions += ["market"]
    productFlavors {
        free {
            dimension "market"
        }
        play {
            dimension "market"
        }
    }

// start of the app build.gradle
    namespace "ac.mdiq.podcini"
    lint {
        lintConfig = file("lint.xml")
        checkReleaseBuilds false
        checkDependencies true
        warningsAsErrors true
        abortOnError true
        checkGeneratedSources = true
        disable += ['TypographyDashes', 'TypographyQuotes', 'ObsoleteLintCustomCheck', 'BatteryLife',
                    'ExportedReceiver', 'VectorDrawableCompat', 'NestedWeights', 'Overdraw', 'TextFields',
                    'AlwaysShowAction', 'Autofill', 'ClickableViewAccessibility', 'ContentDescription',
                    'KeyboardInaccessibleWidget', 'LabelFor', 'RelativeOverlap', 'SetTextI18n',
                    'RtlCompat', 'RtlHardcoded', 'VectorPath', 'RtlEnabled']
    }

    signingConfigs {
        releaseConfig {
            enableV1Signing true
            enableV2Signing true
            storeFile file(project.getProperties().getOrDefault("releaseStoreFile", "keystore"))
            storePassword project.getProperties().getOrDefault("releaseStorePassword", "password")
            keyAlias project.getProperties().getOrDefault("releaseKeyAlias", "alias")
            keyPassword project.getProperties().getOrDefault("releaseKeyPassword", "password")
        }
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard.cfg"
            resValue "string", "app_name", "Podcini.X"
            resValue "string", "provider_authority", "ac.mdiq.podcini.X.provider"
//            vcsInfo.include false
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.releaseConfig
        }
        debug {
            resValue "string", "app_name", "Podcini.X Debug"
            applicationIdSuffix ".debug"
            resValue "string", "provider_authority", "ac.mdiq.podcini.X.debug.provider"
        }
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach { output ->
            def applicationName = "Podcini.X"
            def buildType = variant.buildType.name
            def versionName = variant.versionName
            def flavorName = variant.flavorName ?: ""
            def abiName = output.getFilter(com.android.build.OutputFile.ABI) ?: ""
            outputFileName = "${applicationName}_${buildType}_${flavorName}_${versionName}_${abiName}.apk"
        }
    }
    androidResources {
        additionalParameters "--no-version-vectors"
    }

    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }
}

dependencies {
    implementation platform("androidx.compose:compose-bom:2025.04.00")
    implementation "androidx.compose.material3:material3:1.3.2"
    implementation "androidx.activity:activity-compose:1.10.1"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.1.1"
    implementation "androidx.navigation:navigation-compose:2.8.9"

    implementation "androidx.annotation:annotation:1.9.1"
    implementation "androidx.core:core-ktx:1.16.0"
    implementation "androidx.documentfile:documentfile:1.0.1"
    implementation "androidx.core:core-splashscreen:1.0.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.8.7"
    implementation "androidx.preference:preference-ktx:1.2.1"
    implementation "androidx.webkit:webkit:1.13.0"
    implementation "androidx.window:window:1.3.0"
    implementation "androidx.work:work-runtime:2.10.0"

    implementation "androidx.media3:media3-exoplayer:1.6.0"
    implementation "androidx.media3:media3-datasource-okhttp:1.6.0"
    implementation "androidx.media3:media3-ui:1.6.0"
    implementation "androidx.media3:media3-common:1.6.0"
    implementation "androidx.media3:media3-session:1.6.0"

    implementation "com.google.android.material:material:1.12.0"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.1"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "io.github.xilinjia.krdb:library-base:3.2.6"

    implementation "io.coil-kt:coil:2.7.0"
    implementation "io.coil-kt:coil-compose:2.7.0"
    implementation "commons-io:commons-io:2.16.1"
    implementation "org.apache.commons:commons-lang3:3.15.0"

    implementation "org.jsoup:jsoup:1.18.1"
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    implementation "com.squareup.okio:okio:3.10.2"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:4.12.0"
    implementation "net.dankito.readability4j:readability4j:1.0.8"
    implementation "com.github.ByteHamster:SearchPreference:v2.5.0"

    compileOnly "com.google.android.wearable:wearable:2.9.0"

    freeImplementation "org.conscrypt:conscrypt-android:2.5.2"
    debugImplementation "androidx.compose.ui:ui-tooling:1.7.8"
    debugImplementation "androidx.compose.ui:ui-tooling-preview:1.7.8"

    playImplementation "com.google.android.play:core-ktx:1.8.1"
    playImplementation "com.google.android.gms:play-services-base:18.6.0"
    playApi "androidx.mediarouter:mediarouter:1.7.0"
    playApi "com.google.android.gms:play-services-cast-framework:22.0.0"
}

apply plugin: "io.github.xilinjia.krdb"

tasks.register('copyLicense', Copy) {
    from "../LICENSE"
    into "src/main/assets/"
    rename { String fileName ->
        fileName + ".txt"
    }
}

preBuild.dependsOn copyLicense
